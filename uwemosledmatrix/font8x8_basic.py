# https://github.com/dhepper/font8x8
# Note: the rows are ordered bottom to top

font = {
    ' ':  bytes([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]),   # U+0020 (space)
    '!':  bytes([0x00, 0x18, 0x00, 0x18, 0x18, 0x3C, 0x3C, 0x18]),   # U+0021 (!)
    '"':  bytes([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x36]),   # U+0022 (")
    '#':  bytes([0x00, 0x36, 0x36, 0x7F, 0x36, 0x7F, 0x36, 0x36]),   # U+0023 (#)
    '$':  bytes([0x00, 0x0C, 0x1F, 0x30, 0x1E, 0x03, 0x3E, 0x0C]),   # U+0024 ($)
    '%':  bytes([0x00, 0x63, 0x66, 0x0C, 0x18, 0x33, 0x63, 0x00]),   # U+0025 (%)
    '&':  bytes([0x00, 0x6E, 0x33, 0x3B, 0x6E, 0x1C, 0x36, 0x1C]),   # U+0026 (&)
    "'":  bytes([0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x06, 0x06]),   # U+0027 (')
    '(':  bytes([0x00, 0x18, 0x0C, 0x06, 0x06, 0x06, 0x0C, 0x18]),   # U+0028 (()
    ')':  bytes([0x00, 0x06, 0x0C, 0x18, 0x18, 0x18, 0x0C, 0x06]),   # U+0029 ())
    '*':  bytes([0x00, 0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00]),   # U+002A (*)
    '+':  bytes([0x00, 0x00, 0x0C, 0x0C, 0x3F, 0x0C, 0x0C, 0x00]),   # U+002B (+)
    ',':  bytes([0x06, 0x0C, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00]),   # U+002C (,)
    '-':  bytes([0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00]),   # U+002D (-)
    '.':  bytes([0x00, 0x0C, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00]),   # U+002E (.)
    '/':  bytes([0x00, 0x01, 0x03, 0x06, 0x0C, 0x18, 0x30, 0x60]),   # U+002F (/)
    '0':  bytes([0x00, 0x3E, 0x67, 0x6F, 0x7B, 0x73, 0x63, 0x3E]),   # U+0030 (0)
    '1':  bytes([0x00, 0x3F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0E, 0x0C]),   # U+0031 (1)
    '2':  bytes([0x00, 0x3F, 0x33, 0x06, 0x1C, 0x30, 0x33, 0x1E]),   # U+0032 (2)
    '3':  bytes([0x00, 0x1E, 0x33, 0x30, 0x1C, 0x30, 0x33, 0x1E]),   # U+0033 (3)
    '4':  bytes([0x00, 0x78, 0x30, 0x7F, 0x33, 0x36, 0x3C, 0x38]),   # U+0034 (4)
    '5':  bytes([0x00, 0x1E, 0x33, 0x30, 0x30, 0x1F, 0x03, 0x3F]),   # U+0035 (5)
    '6':  bytes([0x00, 0x1E, 0x33, 0x33, 0x1F, 0x03, 0x06, 0x1C]),   # U+0036 (6)
    '7':  bytes([0x00, 0x0C, 0x0C, 0x0C, 0x18, 0x30, 0x33, 0x3F]),   # U+0037 (7)
    '8':  bytes([0x00, 0x1E, 0x33, 0x33, 0x1E, 0x33, 0x33, 0x1E]),   # U+0038 (8)
    '9':  bytes([0x00, 0x0E, 0x18, 0x30, 0x3E, 0x33, 0x33, 0x1E]),   # U+0039 (9)
    ':':  bytes([0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x00]),   # U+003A (:)
    '#':  bytes([0x06, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x00]),   # U+003B (#)
    '<':  bytes([0x00, 0x18, 0x0C, 0x06, 0x03, 0x06, 0x0C, 0x18]),   # U+003C (<)
    '=':  bytes([0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00]),   # U+003D (=)
    '>':  bytes([0x00, 0x06, 0x0C, 0x18, 0x30, 0x18, 0x0C, 0x06]),   # U+003E (>)
    '?':  bytes([0x00, 0x0C, 0x00, 0x0C, 0x18, 0x30, 0x33, 0x1E]),   # U+003F (?)
    '@':  bytes([0x00, 0x1E, 0x03, 0x7B, 0x7B, 0x7B, 0x63, 0x3E]),   # U+0040 (@)
    'A':  bytes([0x00, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x1E, 0x0C]),   # U+0041 (A)
    'B':  bytes([0x00, 0x3F, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x3F]),   # U+0042 (B)
    'C':  bytes([0x00, 0x3C, 0x66, 0x03, 0x03, 0x03, 0x66, 0x3C]),   # U+0043 (C)
    'D':  bytes([0x00, 0x1F, 0x36, 0x66, 0x66, 0x66, 0x36, 0x1F]),   # U+0044 (D)
    'E':  bytes([0x00, 0x7F, 0x46, 0x16, 0x1E, 0x16, 0x46, 0x7F]),   # U+0045 (E)
    'F':  bytes([0x00, 0x0F, 0x06, 0x16, 0x1E, 0x16, 0x46, 0x7F]),   # U+0046 (F)
    'G':  bytes([0x00, 0x7C, 0x66, 0x73, 0x03, 0x03, 0x66, 0x3C]),   # U+0047 (G)
    'H':  bytes([0x00, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33]),   # U+0048 (H)
    'I':  bytes([0x00, 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E]),   # U+0049 (I)
    'J':  bytes([0x00, 0x1E, 0x33, 0x33, 0x30, 0x30, 0x30, 0x78]),   # U+004A (J)
    'K':  bytes([0x00, 0x67, 0x66, 0x36, 0x1E, 0x36, 0x66, 0x67]),   # U+004B (K)
    'L':  bytes([0x00, 0x7F, 0x66, 0x46, 0x06, 0x06, 0x06, 0x0F]),   # U+004C (L)
    'M':  bytes([0x00, 0x63, 0x63, 0x6B, 0x7F, 0x7F, 0x77, 0x63]),   # U+004D (M)
    'N':  bytes([0x00, 0x63, 0x63, 0x73, 0x7B, 0x6F, 0x67, 0x63]),   # U+004E (N)
    'O':  bytes([0x00, 0x1C, 0x36, 0x63, 0x63, 0x63, 0x36, 0x1C]),   # U+004F (O)
    'P':  bytes([0x00, 0x0F, 0x06, 0x06, 0x3E, 0x66, 0x66, 0x3F]),   # U+0050 (P)
    'Q':  bytes([0x00, 0x38, 0x1E, 0x3B, 0x33, 0x33, 0x33, 0x1E]),   # U+0051 (Q)
    'R':  bytes([0x00, 0x67, 0x66, 0x36, 0x3E, 0x66, 0x66, 0x3F]),   # U+0052 (R)
    'S':  bytes([0x00, 0x1E, 0x33, 0x38, 0x0E, 0x07, 0x33, 0x1E]),   # U+0053 (S)
    'T':  bytes([0x00, 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x2D, 0x3F]),   # U+0054 (T)
    'U':  bytes([0x00, 0x3F, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33]),   # U+0055 (U)
    'V':  bytes([0x00, 0x0C, 0x1E, 0x33, 0x33, 0x33, 0x33, 0x33]),   # U+0056 (V)
    'W':  bytes([0x00, 0x63, 0x77, 0x7F, 0x6B, 0x63, 0x63, 0x63]),   # U+0057 (W)
    'X':  bytes([0x00, 0x63, 0x36, 0x1C, 0x1C, 0x36, 0x63, 0x63]),   # U+0058 (X)
    'Y':  bytes([0x00, 0x1E, 0x0C, 0x0C, 0x1E, 0x33, 0x33, 0x33]),   # U+0059 (Y)
    'Z':  bytes([0x00, 0x7F, 0x66, 0x4C, 0x18, 0x31, 0x63, 0x7F]),   # U+005A (Z)
    '[':  bytes([0x00, 0x1E, 0x06, 0x06, 0x06, 0x06, 0x06, 0x1E]),   # U+005B ([)
    '\\': bytes([0x00, 0x40, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03]),   # U+005C (\)
    ']':  bytes([0x00, 0x1E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1E]),   # U+005D (])
    '^':  bytes([0x00, 0x00, 0x00, 0x00, 0x63, 0x36, 0x1C, 0x08]),   # U+005E (^)
    '_':  bytes([0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]),   # U+005F (_)
    '`':  bytes([0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x0C, 0x0C]),   # U+0060 (`)
    'a':  bytes([0x00, 0x6E, 0x33, 0x3E, 0x30, 0x1E, 0x00, 0x00]),   # U+0061 (a)
    'b':  bytes([0x00, 0x3B, 0x66, 0x66, 0x3E, 0x06, 0x06, 0x07]),   # U+0062 (b)
    'c':  bytes([0x00, 0x1E, 0x33, 0x03, 0x33, 0x1E, 0x00, 0x00]),   # U+0063 (c)
    'd':  bytes([0x00, 0x6E, 0x33, 0x33, 0x3e, 0x30, 0x30, 0x38]),   # U+0064 (d)
    'e':  bytes([0x00, 0x1E, 0x03, 0x3f, 0x33, 0x1E, 0x00, 0x00]),   # U+0065 (e)
    'f':  bytes([0x00, 0x0F, 0x06, 0x06, 0x0f, 0x06, 0x36, 0x1C]),   # U+0066 (f)
    'g':  bytes([0x1F, 0x30, 0x3E, 0x33, 0x33, 0x6E, 0x00, 0x00]),   # U+0067 (g)
    'h':  bytes([0x00, 0x67, 0x66, 0x66, 0x6E, 0x36, 0x06, 0x07]),   # U+0068 (h)
    'i':  bytes([0x00, 0x1E, 0x0C, 0x0C, 0x0C, 0x0E, 0x00, 0x0C]),   # U+0069 (i)
    'j':  bytes([0x1E, 0x33, 0x33, 0x30, 0x30, 0x30, 0x00, 0x30]),   # U+006A (j)
    'k':  bytes([0x00, 0x67, 0x36, 0x1E, 0x36, 0x66, 0x06, 0x07]),   # U+006B (k)
    'l':  bytes([0x00, 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0E]),   # U+006C (l)
    'm':  bytes([0x00, 0x63, 0x6B, 0x7F, 0x7F, 0x33, 0x00, 0x00]),   # U+006D (m)
    'n':  bytes([0x00, 0x33, 0x33, 0x33, 0x33, 0x1F, 0x00, 0x00]),   # U+006E (n)
    'o':  bytes([0x00, 0x1E, 0x33, 0x33, 0x33, 0x1E, 0x00, 0x00]),   # U+006F (o)
    'p':  bytes([0x0F, 0x06, 0x3E, 0x66, 0x66, 0x3B, 0x00, 0x00]),   # U+0070 (p)
    'q':  bytes([0x78, 0x30, 0x3E, 0x33, 0x33, 0x6E, 0x00, 0x00]),   # U+0071 (q)
    'r':  bytes([0x00, 0x0F, 0x06, 0x66, 0x6E, 0x3B, 0x00, 0x00]),   # U+0072 (r)
    's':  bytes([0x00, 0x1F, 0x30, 0x1E, 0x03, 0x3E, 0x00, 0x00]),   # U+0073 (s)
    't':  bytes([0x00, 0x18, 0x2C, 0x0C, 0x0C, 0x3E, 0x0C, 0x08]),   # U+0074 (t)
    'u':  bytes([0x00, 0x6E, 0x33, 0x33, 0x33, 0x33, 0x00, 0x00]),   # U+0075 (u)
    'v':  bytes([0x00, 0x0C, 0x1E, 0x33, 0x33, 0x33, 0x00, 0x00]),   # U+0076 (v)
    'w':  bytes([0x00, 0x36, 0x7F, 0x7F, 0x6B, 0x63, 0x00, 0x00]),   # U+0077 (w)
    'x':  bytes([0x00, 0x63, 0x36, 0x1C, 0x36, 0x63, 0x00, 0x00]),   # U+0078 (x)
    'y':  bytes([0x1F, 0x30, 0x3E, 0x33, 0x33, 0x33, 0x00, 0x00]),   # U+0079 (y)
    'z':  bytes([0x00, 0x3F, 0x26, 0x0C, 0x19, 0x3F, 0x00, 0x00]),   # U+007A (z)
    '{':  bytes([0x00, 0x38, 0x0C, 0x0C, 0x07, 0x0C, 0x0C, 0x38]),   # U+007B ({)
    '|':  bytes([0x00, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18]),   # U+007C (|)
    '}':  bytes([0x00, 0x07, 0x0C, 0x0C, 0x38, 0x0C, 0x0C, 0x07]),   # U+007D (})
    '~':  bytes([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3B, 0x6E])}   # U+007E (~)
